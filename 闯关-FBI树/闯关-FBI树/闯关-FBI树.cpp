/*开始时间： 2016-07-14 16:07:02
实现功能：题目描述
   我们可以把由“0”和“1”组成的字符串分为三类：全“0”串称为B串，全“1”串称为I串，既含“0”又含“1”的串则称为F串。
FBI树是一种二叉树[1]，它的结点类型也包括F结点，B结点和I结点三种。由一个长度为2^N的“01”串S可以构造出一棵FBI树T，递归的构造方法如下：
1) T的根结点为R，其类型与串S的类型相同；
2) 若串S的长度大于1，将串S从中间分开，分为等长的左右子串S1和S2；由左子串S1构造R的左子树T1，由右子串S2构造R的右子树T2。
现在给定一个长度为2^N的“01”串，请用上述构造方法构造出一棵FBI树，并输出它的后序遍历[2]序列。
[1] 二叉树：二叉树是结点的有限集合，这个集合或为空集，或由一个根结点和两棵不相交的二叉树组成。这两棵不相交的二叉树分别称为这个根结点的左子树和右子树。
[2] 后序遍历：后序遍历是深度优先遍历二叉树的一种方法，它的递归定义是：先后序遍历左子树，再后序遍历右子树，最后访问根。
 

接口说明
原型：
intPostOrderTrav(int N, char* pStr_01，char* pStr_FBI);
输入参数：
    int N：整数，0 <= <>N <= 10<>。<= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= 10<><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <><= <>
     char* pStr_01:长度为2^N的“01”串         
输出参数（指针指向的内存区域保证有效）：
    char* pStr_FBI：FBI的后序遍历序列    
返回值：
    int：正常输出返回0；异常返回-1；
例如：
输入：3，“10001011”；输出 “IBFBBBFIBFIIIFF”
提示：
   对于40%的数据，N <= 2<><= 2<><= 2<><= 2<><= 2<><= 2<>
   对于全部的数据，N <= 10


输入	
输入一个整数，及其2^N 的字符串。
输出	
根据字符串，创建一个二叉树，并按后序遍历输出
样例输入	3,10001011
样例输出	IBFBBBFIBFIIIFF

*/

//解题报告：把字符串SS的（X=0,Y=strlen(S))进行递归，当X==Y时，在输出结果；
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
char ss[1100];
void fbiprint(int x,int y)
{
    int i,cnt0,cnt1;
    if(x==y)
    {
        if(ss[x]=='0') printf("B");
        else printf("I");
    }
    else
    {
        int mid=(y-x-1)/2;
        fbiprint(x,x+mid);
        fbiprint(y-mid,y);
        cnt0=cnt1=0;
        for(i=x;i<=y;i++)
            if(ss[i]=='0') cnt0++;
            else  cnt1++;
        if(cnt0==0) printf("I");
        else if(cnt1==0) printf("B");
        else printf("F");
    }
}
int main()
{

    int num,m;

    scanf("%d,",&num);
    scanf("%s",ss);

    m=(int)pow(2.0,num);
    fbiprint(0,m-1);

    printf("\n");

	system("pause");
    return 0;
}
/*结束时间： 2016-07-14 16:20:28
  存在问题：
  核心功能：不实际建立二叉树的数据结构 根据构建二叉树的规则进行打印

  http://blog.csdn.net/u011123263/article/details/17148721
*/